security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        # App\Entity\User:
        FOS\UserBundle\Model\UserInterface: bcrypt
        App\Entity\User: sha512
    providers:
        our_users:
            entity: { class: App\Entity\User, property: email }
        # some_provider_key:
        # in_memory: { memory: ~ }
            # users:
            #     user:  { password: '%env(USER_PASSWORD)%', roles: [ 'ROLE_USER' ] }
            #     admin: { password: '%env(ADMIN_PASSWORD)%', roles: [ 'ROLE_ADMIN' ] }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
    role_hierarchy:
        ROLE_ADMIN:         ['"ROLE_USER": "ROLE_BASICUSER"']
        ROLE_BASICUSER:   ['"ROLE_USER": "ROLE_BASICUSER"']


            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    # access_control:
    #     - { path: ^/admin_profile, roles: ROLE_ADMIN }
    #     - { path: ^/normaluser_profile, roles: ROLE_BASICUSER }
